

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jun 23 16:58:09 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 05/05/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F26K20 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    61  0000                     
    62 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    63  0000                     
    64 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    65  0000                     
    66                           	psect	nvCOMRAM
    67  000001                     __pnvCOMRAM:
    68                           	callstack 0
    69  000001                     _EUSART_ErrorHandler:
    70                           	callstack 0
    71  000001                     	ds	2
    72  000003                     _EUSART_OverrunErrorHandler:
    73                           	callstack 0
    74  000003                     	ds	2
    75  000005                     _EUSART_FramingErrorHandler:
    76                           	callstack 0
    77  000005                     	ds	2
    78  0000                     _INTCONbits	set	4082
    79  0000                     _INTCON2bits	set	4081
    80  0000                     _WPUB	set	3964
    81  0000                     _ANSELH	set	3967
    82  0000                     _ANSEL	set	3966
    83  0000                     _TRISC	set	3988
    84  0000                     _TRISB	set	3987
    85  0000                     _TRISA	set	3986
    86  0000                     _LATC	set	3979
    87  0000                     _LATB	set	3978
    88  0000                     _LATA	set	3977
    89  0000                     _OSCTUNE	set	3995
    90  0000                     _OSCCON	set	4051
    91  0000                     _TXREG	set	4013
    92  0000                     _RCREG	set	4014
    93  0000                     _RCSTAbits	set	4011
    94  0000                     _TXSTAbits	set	4012
    95  0000                     _PIR1bits	set	3998
    96  0000                     _SPBRGH	set	4016
    97  0000                     _SPBRG	set	4015
    98  0000                     _TXSTA	set	4012
    99  0000                     _RCSTA	set	4011
   100  0000                     _BAUDCON	set	4024
   101                           
   102                           	psect	smallconst
   103  001000                     __psmallconst:
   104                           	callstack 0
   105  001000  00                 	db	0
   106  001001                     STR_2:
   107  001001  2F                 	db	47
   108  001002  6E                 	db	110	;'n'
   109  001003  50                 	db	80	;'P'
   110  001004  72                 	db	114	;'r'
   111  001005  65                 	db	101	;'e'
   112  001006  73                 	db	115	;'s'
   113  001007  73                 	db	115	;'s'
   114  001008  20                 	db	32
   115  001009  31                 	db	49	;'1'
   116  00100A  20                 	db	32
   117  00100B  66                 	db	102	;'f'
   118  00100C  6F                 	db	111	;'o'
   119  00100D  72                 	db	114	;'r'
   120  00100E  20                 	db	32
   121  00100F  52                 	db	82	;'R'
   122  001010  65                 	db	101	;'e'
   123  001011  64                 	db	100	;'d'
   124  001012  2C                 	db	44
   125  001013  20                 	db	32
   126  001014  32                 	db	50	;'2'
   127  001015  20                 	db	32
   128  001016  66                 	db	102	;'f'
   129  001017  6F                 	db	111	;'o'
   130  001018  72                 	db	114	;'r'
   131  001019  20                 	db	32
   132  00101A  59                 	db	89	;'Y'
   133  00101B  65                 	db	101	;'e'
   134  00101C  6C                 	db	108	;'l'
   135  00101D  6C                 	db	108	;'l'
   136  00101E  6F                 	db	111	;'o'
   137  00101F  77                 	db	119	;'w'
   138  001020  2C                 	db	44
   139  001021  20                 	db	32
   140  001022  33                 	db	51	;'3'
   141  001023  20                 	db	32
   142  001024  66                 	db	102	;'f'
   143  001025  6F                 	db	111	;'o'
   144  001026  72                 	db	114	;'r'
   145  001027  20                 	db	32
   146  001028  67                 	db	103	;'g'
   147  001029  72                 	db	114	;'r'
   148  00102A  65                 	db	101	;'e'
   149  00102B  65                 	db	101	;'e'
   150  00102C  6E                 	db	110	;'n'
   151  00102D  00                 	db	0
   152  00102E                     STR_1:
   153  00102E  57                 	db	87	;'W'
   154  00102F  65                 	db	101	;'e'
   155  001030  6C                 	db	108	;'l'
   156  001031  63                 	db	99	;'c'
   157  001032  6F                 	db	111	;'o'
   158  001033  6D                 	db	109	;'m'
   159  001034  65                 	db	101	;'e'
   160  001035  20                 	db	32
   161  001036  74                 	db	116	;'t'
   162  001037  6F                 	db	111	;'o'
   163  001038  20                 	db	32
   164  001039  33                 	db	51	;'3'
   165  00103A  32                 	db	50	;'2'
   166  00103B  36                 	db	54	;'6'
   167  00103C  20                 	db	32
   168  00103D  4C                 	db	76	;'L'
   169  00103E  61                 	db	97	;'a'
   170  00103F  62                 	db	98	;'b'
   171  001040  31                 	db	49	;'1'
   172  001041  42                 	db	66	;'B'
   173  001042  00                 	db	0
   174  001043  00                 	db	0	; dummy byte at the end
   175  0000                     
   176                           ; #config settings
   177                           
   178                           	psect	cinit
   179  001152                     __pcinit:
   180                           	callstack 0
   181  001152                     start_initialization:
   182                           	callstack 0
   183  001152                     __initialization:
   184                           	callstack 0
   185                           
   186                           ; Clear objects allocated to COMRAM (1 bytes)
   187  001152  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   188  001154                     end_of_initialization:
   189                           	callstack 0
   190  001154                     __end_of__initialization:
   191                           	callstack 0
   192  001154  0100               	movlb	0
   193  001156  EF71  F008         	goto	_main	;jump to C main() function
   194                           
   195                           	psect	bssCOMRAM
   196  00000A                     __pbssCOMRAM:
   197                           	callstack 0
   198  00000A                     _eusartRxLastError:
   199                           	callstack 0
   200  00000A                     	ds	1
   201                           
   202                           	psect	cstackCOMRAM
   203  000007                     __pcstackCOMRAM:
   204                           	callstack 0
   205  000007                     EUSART_Write@txData:
   206                           	callstack 0
   207  000007                     EUSART_SetFramingErrorHandler@interruptHandler:
   208                           	callstack 0
   209  000007                     EUSART_SetOverrunErrorHandler@interruptHandler:
   210                           	callstack 0
   211  000007                     EUSART_SetErrorHandler@interruptHandler:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x0
   215  000007                     	ds	1
   216  000008                     send_string@x:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x1
   220  000008                     	ds	1
   221  000009                     
   222                           ; 1 bytes @ 0x2
   223  000009                     	ds	1
   224  00000A                     
   225                           ; 1 bytes @ 0x3
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 56 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;Total ram usage:        0 bytes
   250 ;; Hardware stack levels required when called:    3
   251 ;; This function calls:
   252 ;;		_SYSTEM_Initialize
   253 ;;		_send_string
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text0
   260  0010E2                     __ptext0:
   261                           	callstack 0
   262  0010E2                     _main:
   263                           	callstack 28
   264  0010E2                     
   265                           ;main.c: 59:     SYSTEM_Initialize();
   266  0010E2  EC8E  F008         	call	_SYSTEM_Initialize	;wreg free
   267  0010E6                     
   268                           ;main.c: 76:     send_string("Welcome to 326 Lab1B");
   269  0010E6  0E2E               	movlw	low STR_1
   270  0010E8  6E08               	movwf	send_string@x^0,c
   271  0010EA  0E10               	movlw	high STR_1
   272  0010EC  6E09               	movwf	(send_string@x+1)^0,c
   273  0010EE  EC41  F008         	call	_send_string	;wreg free
   274  0010F2                     
   275                           ;main.c: 77:     send_string("/nPress 1 for Red, 2 for Yellow, 3 for green");
   276  0010F2  0E01               	movlw	low STR_2
   277  0010F4  6E08               	movwf	send_string@x^0,c
   278  0010F6  0E10               	movlw	high STR_2
   279  0010F8  6E09               	movwf	(send_string@x+1)^0,c
   280  0010FA  EC41  F008         	call	_send_string	;wreg free
   281  0010FE                     l119:
   282  0010FE  EF7F  F008         	goto	l119
   283  001102  EF00  F000         	goto	start
   284  001106                     __end_of_main:
   285                           	callstack 0
   286                           
   287 ;; *************** function _send_string *****************
   288 ;; Defined at:
   289 ;;		line 50 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;  x               2    1[COMRAM] PTR const unsigned char 
   292 ;;		 -> STR_2(45), STR_1(21), 
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;Total ram usage:        2 bytes
   309 ;; Hardware stack levels used:    1
   310 ;; Hardware stack levels required when called:    1
   311 ;; This function calls:
   312 ;;		_EUSART_Write
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text1
   319  001082                     __ptext1:
   320                           	callstack 0
   321  001082                     _send_string:
   322                           	callstack 29
   323  001082                     
   324                           ;main.c: 51:     while(*x){
   325  001082  EF4E  F008         	goto	l930
   326  001086                     l926:
   327                           
   328                           ;main.c: 52:         EUSART_Write(*x++);
   329  001086  C008  FFF6         	movff	send_string@x,tblptrl
   330  00108A  C009  FFF7         	movff	send_string@x+1,tblptrh
   331  00108E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   332  00108E  6AF8               	clrf	tblptru,c
   333  001090                     	endif
   334  001090                     	if	0	;tblptru may be non-zero
   335  001090                     	endif
   336  001090  0008               	tblrd		*
   337  001092  50F5               	movf	tablat,w,c
   338  001094  EC83  F008         	call	_EUSART_Write
   339  001098  4A08               	infsnz	send_string@x^0,f,c
   340  00109A  2A09               	incf	(send_string@x+1)^0,f,c
   341  00109C                     l930:
   342                           
   343                           ;main.c: 51:     while(*x){
   344  00109C  C008  FFF6         	movff	send_string@x,tblptrl
   345  0010A0  C009  FFF7         	movff	send_string@x+1,tblptrh
   346  0010A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   347  0010A4  6AF8               	clrf	tblptru,c
   348  0010A6                     	endif
   349  0010A6                     	if	0	;tblptru may be non-zero
   350  0010A6                     	endif
   351  0010A6  0008               	tblrd		*
   352  0010A8  50F5               	movf	tablat,w,c
   353  0010AA  0900               	iorlw	0
   354  0010AC  A4D8               	btfss	status,2,c
   355  0010AE  EF5B  F008         	goto	u71
   356  0010B2  EF5D  F008         	goto	u70
   357  0010B6                     u71:
   358  0010B6  EF43  F008         	goto	l926
   359  0010BA                     u70:
   360  0010BA  0012               	return		;funcret
   361  0010BC                     __end_of_send_string:
   362                           	callstack 0
   363                           
   364 ;; *************** function _EUSART_Write *****************
   365 ;; Defined at:
   366 ;;		line 132 in file "mcc_generated_files/eusart.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;  txData          1    wreg     unsigned char 
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  txData          1    0[COMRAM] unsigned char 
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;Total ram usage:        1 bytes
   385 ;; Hardware stack levels used:    1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_send_string
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text2
   394  001106                     __ptext2:
   395                           	callstack 0
   396  001106                     _EUSART_Write:
   397                           	callstack 29
   398                           
   399                           ;incstack = 0
   400                           ;EUSART_Write@txData stored from wreg
   401  001106  6E07               	movwf	EUSART_Write@txData^0,c
   402  001108                     l67:
   403                           
   404                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
   405  001108  A89E               	btfss	158,4,c	;volatile
   406  00110A  EF89  F008         	goto	u11
   407  00110E  EF8B  F008         	goto	u10
   408  001112                     u11:
   409  001112  EF84  F008         	goto	l67
   410  001116                     u10:
   411  001116                     
   412                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
   413  001116  C007  FFAD         	movff	EUSART_Write@txData,4013	;volatile
   414  00111A  0012               	return		;funcret
   415  00111C                     __end_of_EUSART_Write:
   416                           	callstack 0
   417                           
   418 ;; *************** function _SYSTEM_Initialize *****************
   419 ;; Defined at:
   420 ;;		line 50 in file "mcc_generated_files/mcc.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    2
   441 ;; This function calls:
   442 ;;		_EUSART_Initialize
   443 ;;		_OSCILLATOR_Initialize
   444 ;;		_PIN_MANAGER_Initialize
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text3
   451  00111C                     __ptext3:
   452                           	callstack 0
   453  00111C                     _SYSTEM_Initialize:
   454                           	callstack 28
   455  00111C                     
   456                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   457  00111C  EC5E  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   458                           
   459                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   460  001120  EC95  F008         	call	_OSCILLATOR_Initialize	;wreg free
   461  001124                     
   462                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
   463  001124  EC22  F008         	call	_EUSART_Initialize	;wreg free
   464  001128  0012               	return		;funcret
   465  00112A                     __end_of_SYSTEM_Initialize:
   466                           	callstack 0
   467                           
   468 ;; *************** function _PIN_MANAGER_Initialize *****************
   469 ;; Defined at:
   470 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_SYSTEM_Initialize
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text4
   498  0010BC                     __ptext4:
   499                           	callstack 0
   500  0010BC                     _PIN_MANAGER_Initialize:
   501                           	callstack 29
   502  0010BC                     
   503                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   504  0010BC  0E00               	movlw	0
   505  0010BE  6E89               	movwf	137,c	;volatile
   506                           
   507                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   508  0010C0  0E00               	movlw	0
   509  0010C2  6E8A               	movwf	138,c	;volatile
   510                           
   511                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   512  0010C4  0E00               	movlw	0
   513  0010C6  6E8B               	movwf	139,c	;volatile
   514  0010C8                     
   515                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   516  0010C8  6892               	setf	146,c	;volatile
   517                           
   518                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF8;
   519  0010CA  0EF8               	movlw	248
   520  0010CC  6E93               	movwf	147,c	;volatile
   521                           
   522                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   523  0010CE  0EBF               	movlw	191
   524  0010D0  6E94               	movwf	148,c	;volatile
   525                           
   526                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0x1F;
   527  0010D2  0E1F               	movlw	31
   528  0010D4  6E7E               	movwf	126,c	;volatile
   529                           
   530                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x1F;
   531  0010D6  0E1F               	movlw	31
   532  0010D8  6E7F               	movwf	127,c	;volatile
   533                           
   534                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
   535  0010DA  0E00               	movlw	0
   536  0010DC  6E7C               	movwf	124,c	;volatile
   537  0010DE                     
   538                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
   539  0010DE  8EF1               	bsf	241,7,c	;volatile
   540  0010E0  0012               	return		;funcret
   541  0010E2                     __end_of_PIN_MANAGER_Initialize:
   542                           	callstack 0
   543                           
   544 ;; *************** function _OSCILLATOR_Initialize *****************
   545 ;; Defined at:
   546 ;;		line 58 in file "mcc_generated_files/mcc.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, status,2
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;Total ram usage:        0 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_SYSTEM_Initialize
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text5
   574  00112A                     __ptext5:
   575                           	callstack 0
   576  00112A                     _OSCILLATOR_Initialize:
   577                           	callstack 29
   578  00112A                     
   579                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x62;
   580  00112A  0E62               	movlw	98
   581  00112C  6ED3               	movwf	211,c	;volatile
   582                           
   583                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
   584  00112E  0E00               	movlw	0
   585  001130  6E9B               	movwf	155,c	;volatile
   586  001132  0012               	return		;funcret
   587  001134                     __end_of_OSCILLATOR_Initialize:
   588                           	callstack 0
   589                           
   590 ;; *************** function _EUSART_Initialize *****************
   591 ;; Defined at:
   592 ;;		line 66 in file "mcc_generated_files/eusart.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    1
   613 ;; This function calls:
   614 ;;		_EUSART_SetErrorHandler
   615 ;;		_EUSART_SetFramingErrorHandler
   616 ;;		_EUSART_SetOverrunErrorHandler
   617 ;; This function is called by:
   618 ;;		_SYSTEM_Initialize
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text6
   623  001044                     __ptext6:
   624                           	callstack 0
   625  001044                     _EUSART_Initialize:
   626                           	callstack 28
   627  001044                     
   628                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
   629  001044  0E08               	movlw	8
   630  001046  6EB8               	movwf	184,c	;volatile
   631                           
   632                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
   633  001048  0E90               	movlw	144
   634  00104A  6EAB               	movwf	171,c	;volatile
   635                           
   636                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
   637  00104C  0E24               	movlw	36
   638  00104E  6EAC               	movwf	172,c	;volatile
   639                           
   640                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xCF;
   641  001050  0ECF               	movlw	207
   642  001052  6EAF               	movwf	175,c	;volatile
   643                           
   644                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
   645  001054  0E00               	movlw	0
   646  001056  6EB0               	movwf	176,c	;volatile
   647  001058                     
   648                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
   649  001058  0E00               	movlw	0
   650  00105A  6E07               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
   651  00105C  0E00               	movlw	0
   652  00105E  6E08               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
   653  001060  EC9F  F008         	call	_EUSART_SetFramingErrorHandler	;wreg free
   654  001064                     
   655                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
   656  001064  0E00               	movlw	0
   657  001066  6E07               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
   658  001068  0E00               	movlw	0
   659  00106A  6E08               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
   660  00106C  EC9A  F008         	call	_EUSART_SetOverrunErrorHandler	;wreg free
   661  001070                     
   662                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
   663  001070  0E00               	movlw	0
   664  001072  6E07               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
   665  001074  0E00               	movlw	0
   666  001076  6E08               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
   667  001078  ECA4  F008         	call	_EUSART_SetErrorHandler	;wreg free
   668  00107C                     
   669                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
   670  00107C  0E00               	movlw	0
   671  00107E  6E0A               	movwf	_eusartRxLastError^0,c	;volatile
   672  001080  0012               	return		;funcret
   673  001082                     __end_of_EUSART_Initialize:
   674                           	callstack 0
   675                           
   676 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
   677 ;; Defined at:
   678 ;;		line 161 in file "mcc_generated_files/eusart.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   681 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;Total ram usage:        2 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_EUSART_Initialize
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text7
   707  001134                     __ptext7:
   708                           	callstack 0
   709  001134                     _EUSART_SetOverrunErrorHandler:
   710                           	callstack 28
   711  001134                     
   712                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
   713  001134  C007  F003         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
   714  001138  C008  F004         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
   715  00113C  0012               	return		;funcret
   716  00113E                     __end_of_EUSART_SetOverrunErrorHandler:
   717                           	callstack 0
   718                           
   719 ;; *************** function _EUSART_SetFramingErrorHandler *****************
   720 ;; Defined at:
   721 ;;		line 157 in file "mcc_generated_files/eusart.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   724 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;Total ram usage:        2 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_EUSART_Initialize
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text8
   750  00113E                     __ptext8:
   751                           	callstack 0
   752  00113E                     _EUSART_SetFramingErrorHandler:
   753                           	callstack 28
   754  00113E                     
   755                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
   756  00113E  C007  F005         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
   757  001142  C008  F006         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
   758  001146  0012               	return		;funcret
   759  001148                     __end_of_EUSART_SetFramingErrorHandler:
   760                           	callstack 0
   761                           
   762 ;; *************** function _EUSART_SetErrorHandler *****************
   763 ;; Defined at:
   764 ;;		line 165 in file "mcc_generated_files/eusart.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   767 ;;		 -> EUSART_DefaultErrorHandler(1), 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;Total ram usage:        2 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_EUSART_Initialize
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text9
   793  001148                     __ptext9:
   794                           	callstack 0
   795  001148                     _EUSART_SetErrorHandler:
   796                           	callstack 28
   797  001148                     
   798                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
   799  001148  C007  F001         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
   800  00114C  C008  F002         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
   801  001150  0012               	return		;funcret
   802  001152                     __end_of_EUSART_SetErrorHandler:
   803                           	callstack 0
   804                           
   805                           	psect	rparam
   806  0000                     
   807                           	psect	idloc
   808                           
   809                           ;Config register IDLOC0 @ 0x200000
   810                           ;	unspecified, using default values
   811  200000                     	org	2097152
   812  200000  FF                 	db	255
   813                           
   814                           ;Config register IDLOC1 @ 0x200001
   815                           ;	unspecified, using default values
   816  200001                     	org	2097153
   817  200001  FF                 	db	255
   818                           
   819                           ;Config register IDLOC2 @ 0x200002
   820                           ;	unspecified, using default values
   821  200002                     	org	2097154
   822  200002  FF                 	db	255
   823                           
   824                           ;Config register IDLOC3 @ 0x200003
   825                           ;	unspecified, using default values
   826  200003                     	org	2097155
   827  200003  FF                 	db	255
   828                           
   829                           ;Config register IDLOC4 @ 0x200004
   830                           ;	unspecified, using default values
   831  200004                     	org	2097156
   832  200004  FF                 	db	255
   833                           
   834                           ;Config register IDLOC5 @ 0x200005
   835                           ;	unspecified, using default values
   836  200005                     	org	2097157
   837  200005  FF                 	db	255
   838                           
   839                           ;Config register IDLOC6 @ 0x200006
   840                           ;	unspecified, using default values
   841  200006                     	org	2097158
   842  200006  FF                 	db	255
   843                           
   844                           ;Config register IDLOC7 @ 0x200007
   845                           ;	unspecified, using default values
   846  200007                     	org	2097159
   847  200007  FF                 	db	255
   848                           
   849                           	psect	config
   850                           
   851                           ; Padding undefined space
   852  300000                     	org	3145728
   853  300000  FF                 	db	255
   854                           
   855                           ;Config register CONFIG1H @ 0x300001
   856                           ;	Oscillator Selection bits
   857                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   858                           ;	Fail-Safe Clock Monitor Enable bit
   859                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   860                           ;	Internal/External Oscillator Switchover bit
   861                           ;	IESO = OFF, Oscillator Switchover mode disabled
   862  300001                     	org	3145729
   863  300001  08                 	db	8
   864                           
   865                           ;Config register CONFIG2L @ 0x300002
   866                           ;	Power-up Timer Enable bit
   867                           ;	PWRT = OFF, PWRT disabled
   868                           ;	Brown-out Reset Enable bits
   869                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   870                           ;	Brown Out Reset Voltage bits
   871                           ;	BORV = 18, VBOR set to 1.8 V nominal
   872  300002                     	org	3145730
   873  300002  1F                 	db	31
   874                           
   875                           ;Config register CONFIG2H @ 0x300003
   876                           ;	Watchdog Timer Enable bit
   877                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   878                           ;	Watchdog Timer Postscale Select bits
   879                           ;	WDTPS = 32768, 1:32768
   880  300003                     	org	3145731
   881  300003  1E                 	db	30
   882                           
   883                           ; Padding undefined space
   884  300004                     	org	3145732
   885  300004  FF                 	db	255
   886                           
   887                           ;Config register CONFIG3H @ 0x300005
   888                           ;	CCP2 MUX bit
   889                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   890                           ;	PORTB A/D Enable bit
   891                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   892                           ;	Low-Power Timer1 Oscillator Enable bit
   893                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   894                           ;	HFINTOSC Fast Start-up
   895                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   896                           ;	MCLR Pin Enable bit
   897                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pi   898  300005                     	org	3145733
   899  300005  89                 	db	137
   900                           
   901                           ;Config register CONFIG4L @ 0x300006
   902                           ;	Stack Full/Underflow Reset Enable bit
   903                           ;	STVREN = ON, Stack full/underflow will cause Reset
   904                           ;	Single-Supply ICSP Enable bit
   905                           ;	LVP = ON, Single-Supply ICSP enabled
   906                           ;	Extended Instruction Set Enable bit
   907                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   908                           ;	Background Debugger Enable bit
   909                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   910  300006                     	org	3145734
   911  300006  85                 	db	133
   912                           
   913                           ; Padding undefined space
   914  300007                     	org	3145735
   915  300007  FF                 	db	255
   916                           
   917                           ;Config register CONFIG5L @ 0x300008
   918                           ;	Code Protection Block 0
   919                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   920                           ;	Code Protection Block 1
   921                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   922                           ;	Code Protection Block 2
   923                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   924                           ;	Code Protection Block 3
   925                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   926  300008                     	org	3145736
   927  300008  0F                 	db	15
   928                           
   929                           ;Config register CONFIG5H @ 0x300009
   930                           ;	Boot Block Code Protection bit
   931                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   932                           ;	Data EEPROM Code Protection bit
   933                           ;	CPD = OFF, Data EEPROM not code-protected
   934  300009                     	org	3145737
   935  300009  C0                 	db	192
   936                           
   937                           ;Config register CONFIG6L @ 0x30000A
   938                           ;	Write Protection Block 0
   939                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   940                           ;	Write Protection Block 1
   941                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   942                           ;	Write Protection Block 2
   943                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   944                           ;	Write Protection Block 3
   945                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
   946  30000A                     	org	3145738
   947  30000A  0F                 	db	15
   948                           
   949                           ;Config register CONFIG6H @ 0x30000B
   950                           ;	Configuration Register Write Protection bit
   951                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   952                           ;	Boot Block Write Protection bit
   953                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   954                           ;	Data EEPROM Write Protection bit
   955                           ;	WRTD = OFF, Data EEPROM not write-protected
   956  30000B                     	org	3145739
   957  30000B  E0                 	db	224
   958                           
   959                           ;Config register CONFIG7L @ 0x30000C
   960                           ;	Table Read Protection Block 0
   961                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   962                           ;	Table Read Protection Block 1
   963                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   964                           ;	Table Read Protection Block 2
   965                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   966                           ;	Table Read Protection Block 3
   967                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   968  30000C                     	org	3145740
   969  30000C  0F                 	db	15
   970                           
   971                           ;Config register CONFIG7H @ 0x30000D
   972                           ;	Boot Block Table Read Protection bit
   973                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   974  30000D                     	org	3145741
   975  30000D  40                 	db	64
   976                           tosu	equ	0xFFF
   977                           tosh	equ	0xFFE
   978                           tosl	equ	0xFFD
   979                           stkptr	equ	0xFFC
   980                           pclatu	equ	0xFFB
   981                           pclath	equ	0xFFA
   982                           pcl	equ	0xFF9
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           prodh	equ	0xFF4
   988                           prodl	equ	0xFF3
   989                           indf0	equ	0xFEF
   990                           postinc0	equ	0xFEE
   991                           postdec0	equ	0xFED
   992                           preinc0	equ	0xFEC
   993                           plusw0	equ	0xFEB
   994                           fsr0h	equ	0xFEA
   995                           fsr0l	equ	0xFE9
   996                           wreg	equ	0xFE8
   997                           indf1	equ	0xFE7
   998                           postinc1	equ	0xFE6
   999                           postdec1	equ	0xFE5
  1000                           preinc1	equ	0xFE4
  1001                           plusw1	equ	0xFE3
  1002                           fsr1h	equ	0xFE2
  1003                           fsr1l	equ	0xFE1
  1004                           bsr	equ	0xFE0
  1005                           indf2	equ	0xFDF
  1006                           postinc2	equ	0xFDE
  1007                           postdec2	equ	0xFDD
  1008                           preinc2	equ	0xFDC
  1009                           plusw2	equ	0xFDB
  1010                           fsr2h	equ	0xFDA
  1011                           fsr2l	equ	0xFD9
  1012                           status	equ	0xFD8

Data Sizes:
    Strings     66
    Constant    0
    Data        0
    BSS         1
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    send_string@x	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[45]), STR_1(CODE[21]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_send_string
    _send_string->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     506
                  _SYSTEM_Initialize
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     0      2     212
                                              1 COMRAM     2     0      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _send_string
     _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3       A       1       10.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      32        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jun 23 16:58:09 2021

                                           l43 1080                                             l70 111A  
                                           l82 1146                                             l67 1108  
                                           l85 113C                                             l88 1150  
                                           u10 1116                                             u11 1112  
                                           u70 10BA                                             u71 10B6  
                                          l101 1128                                            l104 1132  
                                          l120 10FE                                            l114 10BA  
                                          l119 10FE                                            l147 10E0  
                                          l910 1044                                            l904 113E  
                                          l912 1058                                            l920 111C  
                                          l906 1134                                            l914 1064  
                                          l850 10DE                                            l922 1124  
                                          l842 1108                                            l930 109C  
                                          l908 1148                                            l916 1070  
                                          l852 112A                                            l844 1116  
                                          l924 1082                                            l932 10E2  
                                          l918 107C                                            l846 10BC  
                                          l926 1086                                            l934 10E6  
                                          l848 10C8                                            l928 1098  
                                          l936 10F2                 ?_EUSART_SetFramingErrorHandler 0007  
                                         STR_1 102E                                           STR_2 1001  
                                         _LATA 000F89                                           _LATB 000F8A  
                                         _LATC 000F8B                                           _WPUB 000F7C  
                                         _main 10E2                                           start 0000  
                                 ___param_bank 000000                                  ?_EUSART_Write 0007  
               __size_of_OSCILLATOR_Initialize 000A                  __end_of_OSCILLATOR_Initialize 1134  
                                        ?_main 0007                                          _ANSEL 000F7E  
                                        _RCREG 000FAE                                          _RCSTA 000FAB  
                                        _SPBRG 000FAF                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TXREG 000FAD                                          _TXSTA 000FAC  
                                        tablat 000FF5                                          status 000FD8  
                              __initialization 1152                                   __end_of_main 1106  
                               ??_EUSART_Write 0007                                         ??_main 000A  
                                __activetblptr 000003              _EUSART_DefaultFramingErrorHandler 000000  
                   _EUSART_OverrunErrorHandler 0003                                         _ANSELH 000F7F  
                                 ?_send_string 0008                                         _OSCCON 000FD3  
                                       _SPBRGH 000FB0                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                              _SYSTEM_Initialize 111C  
                                   __accesstop 0060                        __end_of__initialization 1154  
                           ?_SYSTEM_Initialize 0007                                  ___rparam_used 000001  
                               __pcstackCOMRAM 0007                            ??_SYSTEM_Initialize 0009  
              ??_EUSART_SetOverrunErrorHandler 0009                      __end_of_SYSTEM_Initialize 112A  
                         __end_of_EUSART_Write 111C                                     __pnvCOMRAM 0001  
                                      _BAUDCON 000FB8                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0009                           __size_of_send_string 003A  
                                      __Hparam 0000                                        __Lparam 0000  
                                 __psmallconst 1000                                        __pcinit 1152  
                                      __ramtop 1000                                        __ptext0 10E2  
                                      __ptext1 1082                                        __ptext2 1106  
                                      __ptext3 111C                                        __ptext4 10BC  
                                      __ptext5 112A                                        __ptext6 1044  
                                      __ptext7 1134                                        __ptext8 113E  
                                      __ptext9 1148                          _OSCILLATOR_Initialize 112A  
                     ??_PIN_MANAGER_Initialize 0007                     __size_of_SYSTEM_Initialize 000E  
                         end_of_initialization 1154          __end_of_EUSART_SetOverrunErrorHandler 113E  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 1134  
                            _EUSART_Initialize 1044                             ?_EUSART_Initialize 0007  
                                    _RCSTAbits 000FAB                            ??_EUSART_Initialize 0009  
                        __size_of_EUSART_Write 0016                __size_of_EUSART_SetErrorHandler 000A  
                    __end_of_EUSART_Initialize 1082                                      _TXSTAbits 000FAC  
                   _EUSART_DefaultErrorHandler 000000                                   _EUSART_Write 1106  
                       ?_OSCILLATOR_Initialize 0007                            start_initialization 1152  
              __size_of_PIN_MANAGER_Initialize 0026                 ?_EUSART_SetOverrunErrorHandler 0007  
                   _EUSART_FramingErrorHandler 0005                         _EUSART_SetErrorHandler 1148  
                                  __pbssCOMRAM 000A                     __size_of_EUSART_Initialize 003E  
                       _PIN_MANAGER_Initialize 10BC                                    __smallconst 1000  
                                ??_send_string 000A         EUSART_SetErrorHandler@interruptHandler 0007  
                            _eusartRxLastError 000A                                       _PIR1bits 000F9E  
              ??_EUSART_SetFramingErrorHandler 0009              _EUSART_DefaultOverrunErrorHandler 000000  
                                  _INTCON2bits 000FF1                                       __Hrparam 0000  
                                 send_string@x 0008                            __end_of_send_string 10BC  
                                     __Lrparam 0000                        ??_OSCILLATOR_Initialize 0007  
                          _EUSART_ErrorHandler 0001                                  __size_of_main 0024  
                      ?_EUSART_SetErrorHandler 0007  EUSART_SetOverrunErrorHandler@interruptHandler 0007  
        __end_of_EUSART_SetFramingErrorHandler 1148         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 113E                                     _INTCONbits 000FF2  
                                  _send_string 1082                        ?_PIN_MANAGER_Initialize 0007  
               __end_of_EUSART_SetErrorHandler 1152  EUSART_SetFramingErrorHandler@interruptHandler 0007  
                           EUSART_Write@txData 0007                 __end_of_PIN_MANAGER_Initialize 10E2  
